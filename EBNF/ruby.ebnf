<program> ::= { <statement> };
<statement> ::= <print_statement>
            | <variable_declaration>
            | <arithmetic_operation>
            | <string_operation>
            | <array_operation>
            | <hash_operation>
            | <conditional_statement>
            | <loop_statement>
            | <method_definition>
            | <class_definition>;

<print_statement> ::= puts <expression> ;

<variable_declaration> ::= <identifier> = <expression> ;

<arithmetic_operation> ::= <identifier> = <numeric_expression> { ("+" | "-" | "*" | "/" | "%") <numeric_expression> };

<string_operation> ::= <identifier> = <expression> . ("upcase" | "downcase") ;

<array_operation> ::= <identifier> = '[' <expression> { "," <expression> } ']' ;

<hash_operation> ::= <identifier> = '{' <string_literal> "=>" <expression> { "," <string_literal> "=>" <expression> } '}' ;

<conditional_statement> ::= "if" <condition> <statement> "end"
                           | "if" <condition> <statement> "else" <statement> "end"
                           | "if" <condition> <statement> "else" <conditional_statement> "end";

<loop_statement> ::= "while" <condition> <statement> "end"
                   | "until" <condition> <statement> "end";

<method_definition> ::= "def" <method_name> "(" { <parameter> { "," <parameter> } } ")" <statement> "end";

<class_definition> ::= "class" <class_name> <statement> "end";

<expression> ::= <numeric_expression> | <string_literal> | <identifier>;

<condition> ::= <expression>;

<numeric_expression> ::= <number> { ("+" | "-" | "*" | "/" | "%") <number> };

<identifier> ::= <letter> { <letter> | <digit> | "_" };

<number> ::= <digit> { <digit> };

<letter> ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z";

<digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";

<string_literal> ::= '"' { <character> } '"';

<method_name> ::= <identifier>;

<class_name> ::= <identifier>;

<parameter> ::= <identifier>;
